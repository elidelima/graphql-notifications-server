# import Notification,Notifications,NotificationDetails from "./generated/prisma.graphql"
# import SituationEnum,PriorityEnum,NotificationDetail,NotificationSubscriptionPayload from "./generated/prisma.graphql"
# import createNotification from "./generated/prisma.graphql"

type Query {
    info: String!
    notifications(limitNew: Int, limitHistory: Int, filter: String, nextTokenNew: String, nextTokenHistory: String):NotificationResponse 
    allNotifications: [Notification!]!
    allNotificationsDetails: NotificationDetails
}

type Mutation {
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    createNotification(memberNumber: String!, status: SituationEnum!, code: String!): Notification!
    createNotificationDetail(code: String!, description: String!, action: String!, priority: PriorityEnum!): NotificationDetail!
    moveNotificationToHistory(memberNumber: String!, notificationIds:[String!]!): [Notification]
    deleteAllNotifications(memberNumber: String): String!
}

type Subscription {
    newNotification(memberNumber: String!): NotificationSubscriptionPayload
    counter: Counter!
}


type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
}


enum Status {
    NEW
    HISTORY
}

enum Priority {
    LOW
    MEDIUM
    HIGH
}

type Counter {
    count: Int!
    countStr: String
}


type Notifications {
	notifications: [Notification!]!
    nextToken: String
}

type NotificationResponse {
    notificationsNew: Notifications
    notificationsHistory: Notifications
    newNotificationCount: Int
    hasMoreNewNotification: Boolean
}

type NotificationDetails {
    notificationDetails: [NotificationDetail!]!
    nextToken: String
}